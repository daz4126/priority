{"mappings":"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","sources":["src/app.js","src/nanny.js"],"sourcesContent":["import Nanny from \"./nanny.js\"\n\n// View function\nconst View = state => {\n    // fucntion to add a new item to the main list\n    const addTodo = event => {\n      event.preventDefault()\n      state.Append(\"list\",{id: Date.now().toString(36), text: event.target.task.value, complete: false, snoozed: false, created: Date.now()})\n      event.target.task.value = \"\"\n    }\n    \n    // function to mark an item as complete or uncheck it if it is already complete\n    const check = item => event => state.Replace(\"list\",state.list.findIndex(x => x.id === item.id),{...item,complete: item.complete ? false : Date.now()})\n    \n    // function to snooze a task for a week\n     const snooze = (item,days=3) => state.Replace(\"list\",state.list.findIndex(x => x.id === item.id),{...item,snoozed: new Date(Date.now() + 1000 * 60 * 60 * 24 * Number(days)).setHours(0,0,0,0)})\n     \n     // function to unsnooze a task\n     const unsnooze = item => state.Replace(\"list\",state.list.findIndex(x => x.id === item.id),{...item, snoozed: false})\n    \n    // function that filters all the tasks to show the correct items\n    const currentList = () =>  state.mode === \"completed\" ? [...state.list.filter(item => item.complete),...state.completed]\n                      : state.mode === \"snoozed\" ? state.list.filter(item => item.snoozed && item.snoozed - Date.now() > 0)\n                      : state.mode === \"priority\"  ? state.list.filter(item => !item.complete && (!item.snoozed || item.snoozed - Date.now() < 0)).slice(0,3) \n                      : state.list.filter(item => (!item.complete || Date.now() - item.complete < 1000 * 60 * 60 * 24) && (!item.snoozed || item.snoozed - Date.now() < 0))\n    \n    // clears completed tasks\n    const clearComplete = () => state.Update({\n      list: state.list.filter(item => !item.complete),\n      completed: [...state.completed, ...state.list.filter(item => item.complete)]\n    })\n    \n    // sorting\n    const draggy = {}\n    \n    const dragstart = event => {\n      // line below possibly needed for iOS Safari\n      // event.dataTransfer.setData('text/plain', 'hello')\n      event.target.classList.add(\"draggy\")\n      draggy.item = state.list.find(x => x.id === event.target.id)\n      draggy.list = [...state.list.filter(x => x.id !== event.target.id)]\n    }\n    const dragend = event =>  {\n      event.target.classList.remove(\"draggy\")\n      if(Number.isInteger(draggy.index)) state.Update({list: [...draggy.list.slice(0,draggy.index+1),draggy.item,...draggy.list.slice(draggy.index+1,draggy.list.length)]})\n    }\n    \n    const dragenter = event => {\n      event.target.classList.add(\"over\")\n      draggy.index = event.target.classList.contains(\"list-item\") && draggy.list.findIndex(x => x.id === event.target.id)\n      const rect = event.target.getBoundingClientRect()\n      //console.log(rect.height,rect.top,event.clientY)\n      //\n    }\n    \n    const dragleave = event => event.target.classList.remove(\"over\")\n    \n    \n    // ListItem component\n    const ListItem = item => \n     state.HTML`<li class=\"list-item\" id=\"${item.id}\" key=\"${item.id}\" draggable=${state.mode === \"tasks\"} ondragstart=${dragstart} ondragend=${dragend} ondragover=${ e => e.preventDefault() } ondrop=${ e => e.preventDefault() } ondragleave=${dragleave}>\n            ${state.mode === \"completed\" ? \"\" : \n            state.HTML`<input type=\"checkbox\" \n                              checked=${item.complete} \n                              onchange=${check(item)} />`}\n   ${state.mode === \"priority\" && state.HTML`<span class=\"exclamation\">!</span>`}\n                       <span class=${item.complete && state.mode !== \"completed\" ? \"completed-task\" : \"task\"}>${item.text}</span>\n                       \n                       ${(state.mode === \"tasks\" || state.mode === \"snoozed\") && state.HTML`<div class=\"task-buttons float-end\">\n   ${state.mode === \"snoozed\" ?\n          state.HTML`<button class=\"outline\" onclick=${e => unsnooze(item)}>UNSNOOZE</button>`\n          :\n      state.HTML`<select onchange=${e => snooze(item,event.target.value)} class=\"inline\">\n                   <option selected disabled>SNOOZE</option>\n                   <option value=1>1 Day</option>\n                   <option value=2>2 Days</option>\n                   <option value=3>3 Days</option>\n                   <option value=7>1 Week</option>\n                   <option value=36500>Forever</option>\n                 </select>`}                                   \n                 <button class=\"inline outline\" onclick=${e => state.Update({list: state.list.filter(x => x.id !== item.id)})}>╳</button>   \n                      </div>`}    \n               ${state.mode === \"completed\" && item.complete ? state.HTML`<div class=\"italic lightGrey-text date-info\">Completed on ${new Date(item.complete).toLocaleDateString(\"en-us\",{weekday: 'short',month: 'short', day: 'numeric'})}</div>` : \"\"}\n                  </li>`\n    \n    // main view\n    return state.HTML`\n    <header>\n    <h1 class=\"text-center\" >PR<span class=\"blue-text\">!</span>OR<span class=\"green-text\">!</span>TY<span class=\"red-text\">!</span></h1>\n    <div class=\"buttons row\">\n    <button class=${`${state.mode === \"priority\" ? \"blue\" : \"outline\"} col`} onclick=${event => state.Update({mode: \"priority\"})}>PR!OR!TY!</button>\n      <button class=${`${state.mode === \"tasks\" ? \"blue\" : \"outline\"} col`} onclick=${event => state.Update({mode: \"tasks\"})}>Task List</button>\n      <button class=${`${state.mode === \"snoozed\" ? \"blue\" : \"outline\"} col`} onclick=${event => state.Update({mode: \"snoozed\"})}>Snoozed</button>\n    </div>\n    <form onsubmit=${addTodo} class=${`${state.mode === \"tasks\" ? \"\" : \"hidden\"} align-center`}>\n        <input type=\"text\" id=\"add-task\" name=\"task\" placeholder=\"What do you need to do?\"/>\n        <button class=\"blue\" id=\"add-task-button\">Add</button>\n    </form>\n    </header>\n    <main>\n    ${\n      state.mode === \"instructions\" ?\n      state.HTML`<section id=\"instructions\">\n    <h1 class=\"display-3\">The ultimate todo list that helps you focus on what's important ...</h1><ul><li>Keep everything you have to do in your task list and order it by priority, with the most important tasks at the top. Drag and drop to to change the list order.</li><li>Snooze any tasks you don't want to think about at the moment or if you're waiting for someone else to do something (don't worry, snoozed tasks will automatically reappear in your task list once they've finished snoozing). Click on the SNOOZED button to see all your snoozed tasks or unsnooze them.</li><li>Click on the PR!OR!TY! button when you need focus on your top 3 tasks. These are the tasks that you are currently working on.</li><li>Completed tasks are automatically removed from the task list a day after completion. You can still see them by clicking on the COMPLETED button.</li><li>Click on the TASK LIST button start adding stuff to do!</li>\n    </ul>\n    </section>`\n    :\n    state.mode === \"stats\" ?\n      state.HTML`<section id=\"stats\">\n      <p class=\"italic text-center\">There are no stats yet!</p>\n       </section>`\n    :\n     currentList().length ?\n     state.HTML`<ul id=\"todos\" class=${`${state.mode === \"priority\" ? \"priority\" : \"\"} no-bullet`} ondragenter=${dragenter}>${currentList().map(item => state.HTML`<${ListItem} ...${item} />`)}</ul>\n     <p onclick=${clearComplete} id=\"clear-button\" class=${`${state.mode === \"tasks\" ? \"\" : \"hidden\"} text-center italic lightGrey-text rounded`}>Clear Completed Tasks</p>` \n    : state.HTML`<p id=\"message\" class=\"text-center\"><em>This list is empty!</em></p>`\n    }\n    <div class=\"buttons row\">\n    <button class=${`${state.mode === \"completed\" ? \"blue\" : \"outline\"} col`} onclick=${event => state.Update({mode: \"completed\"})}>Completed</button>\n    <button class=${`${state.mode === \"stats\" ? \"blue\" : \"outline\"} col`} onclick=${event => state.Update({mode: \"stats\"})}>Stats</button>\n    <button class=${`${state.mode === \"instructions\" ? \"blue\" : \"outline\"} col`} onclick=${event => state.Update({mode: \"instructions\"})}>Instructions</button>\n    </div>\n    </main>\n    <footer class=\"text-center\" hidden=${state.mode === \"priority\"}>\n    <p>Another beautifully unconventional <span class=\"JOG\"><span class=\"J\">J</span>O<span class=\"G\">G</span></span> production made with 💚🤍💜 in <a href=\"https://github.com/daz4126/Nanny-State\" title=\"Nanny State\">Nanny State</a></p>\n    </footer>`\n  }\n  \n  // Initiate function - always runs at the start\n  const Initiate = state => {\n    return {\n      mode: state.list.length ? \"tasks\" : \"instructions\",\n      list: state.list.filter(item => (!item.complete || Date.now() - item.complete < 1000 * 60 * 60 * 24)),\n      completed: [...state.completed, ...state.list.filter(item => (item.complete && Date.now() - item.complete >= 1000 * 60 * 60 * 24))]\n    }\n  }\n  \n  // initial state\n  const State = {\n    list: [],\n    completed: [],\n    mode: \"tasks\",\n    Initiate,\n    LocalStorageKey: \"priority96\",\n    Debug: true,\n    View\n  }\n  // start the Nanny State!\n  Nanny(State)","// import render libraries\nimport { render } from \"preact\"\nimport { html } from \"htm/preact\"\n// State management\nexport default function Nanny(State){\n  const _update = (oldObj,newObj) => Object.entries(newObj).forEach(([prop,value]) => oldObj[prop]  = value)\n  if (State.LocalStorageKey && localStorage.getItem(State.LocalStorageKey)) State =  {...State,...JSON.parse(localStorage.getItem(State.LocalStorageKey))}\n  State.HTML = html;\n  State.Append = (list,value) => State.Update({[list]: [ ...State[list], value ]})\n  State.Replace = (list,index,value) => State.Update({[list]: [...State[list].slice(0,index),value,...State[list].slice(index+1, State[list].length)]})\n  State.Update = (...transformers) => {    \n    setState(...transformers);  \n    if (State.LocalStorageKey) localStorage.setItem(State.LocalStorageKey,JSON.stringify(State));\n    if (State.Debug) console.log(JSON.stringify(State));\n    render(State.View(State),State.Element || document.body);\n  };\n  if (State.Initiate) setState(State.Initiate);\n  if (State.Debug) console.log(JSON.stringify(State));\n  render(State.View(State),State.Element || document.body);    \n  function setState(...transformers){\n    State = transformers.reduce((state,transformer) => {\n      const {Update,HTML,Append,Insert,Replace,Remove,...newState} = typeof(transformer) === \"function\" ? transformer(state) : transformer;\n      _update(state,newState);\n      return state\n      },State);\n  }  \n  return State.Update\n}\n\nexport { Nanny }"],"names":[],"version":3,"file":"app.js.map"}